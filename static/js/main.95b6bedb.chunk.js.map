{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","React","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","sort","first","second","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAgB,WAC3B,MAAoCC,IAAMC,UAAS,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCH,IAAMC,SAASJ,EAASO,MAAxD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EApCD,SACLA,EADK,GAMJ,IAHCF,EAGF,EAHEA,SACAH,EAEF,EAFEA,WAGIM,EAAY,YAAOD,GAkBzB,OAfAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKR,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAOI,OAC/B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAWOS,CAAkBnB,EAAiB,CAC/CO,WACAH,eAoBF,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYf,IAAaR,EAASe,WAEpCS,QAzBe,WACrBf,EAAYT,EAASe,WAmBjB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYf,IAAaR,EAASiB,SACtCO,QA9Ba,WACnBf,EAAYT,EAASiB,SAyBjB,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAalB,IACjBmB,QAnCa,WACnBlB,GAAc,SAAAmB,GAAK,OAAKA,MA8BpB,sBASEjB,IAAaR,EAASO,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAxCU,WAClBlB,GAAc,GACdG,EAAYT,EAASO,OAmCf,sBASJ,6BACGG,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC/HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95b6bedb.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  {\n    sortType,\n    isReversed,\n  }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  visibleGoods.sort((first, second) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return first.localeCompare(second);\n      case SortType.LENGTH:\n        return first.length - second.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// interface State {\n//   isReversed: boolean;\n//   sortType: SortType;\n// }\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = React.useState(false);\n  const [sortType, setSortType] = React.useState(SortType.NONE);\n  const goods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reversedList = () => {\n    setIsReversed(state => !state);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={reversedList}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}